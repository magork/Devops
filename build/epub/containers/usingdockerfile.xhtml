<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.18.1: http://docutils.sourceforge.net/" />

    <title>4. Using Dockerfile</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" />
    <link rel="stylesheet" type="text/css" href="../_static/copybutton.css" />
    <link rel="stylesheet" type="text/css" href="../_static/max_width.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="using-dockerfile">
<h1>4. Using Dockerfile</h1>
<img alt="How to create a container" src="../_images/containers.drawio.png" style="width: 1000px;" />
<section id="hello-world">
<h2>Hello world</h2>
<p>Create a file called <code class="docutils literal notranslate"><span class="pre">Dockerfile</span></code> where we will print</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span>FROM<span class="w"> </span>alpine
CMD<span class="w"> </span><span class="o">[</span><span class="s2">&quot;echo&quot;</span>,<span class="w"> </span><span class="s2">&quot;Hell on World!&quot;</span><span class="o">]</span>
</pre></div>
</div>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># clone repository</span>
<span class="c1"># change directory to docker_examples/hello_world</span>
<span class="c1"># get location by running explorer.exe .</span>
<span class="c1"># copy the location from explorer</span>
<span class="c1"># change directory to the location</span>

<span class="c1"># build the created image with a tag (-t) hello from current location (.)</span>
docker<span class="w"> </span>build<span class="w"> </span>-t<span class="w"> </span>hello<span class="w"> </span>.

<span class="c1"># instantiate a container based on created image using tag hello</span>
docker<span class="w"> </span>run<span class="w"> </span>hello

<span class="c1"># instantiate a container based on created image using tag hello and giving the container a name</span>
docker<span class="w"> </span>run<span class="w"> </span>--name<span class="w"> </span>HelloWorld<span class="w"> </span>hello

<span class="c1"># instantiate a container based on created image using tag hello and remove it after run(-rm)</span>
docker<span class="w"> </span>run<span class="w"> </span>--rm<span class="w"> </span>hello
</pre></div>
</div>
</section>
<section id="deploy-webserver">
<h2>Deploy webserver</h2>
<p>Create a file <code class="docutils literal notranslate"><span class="pre">index.html</span></code></p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span>&lt;!doctype<span class="w"> </span>html&gt;
&lt;html<span class="w"> </span><span class="nv">lang</span><span class="o">=</span><span class="s2">&quot;en&quot;</span>&gt;
&lt;head&gt;
&lt;meta<span class="w"> </span><span class="nv">charset</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span>&gt;
&lt;title&gt;Introduction<span class="w"> </span>to<span class="w"> </span>DevOps<span class="w"> </span>-<span class="w"> </span>Docker&lt;/title&gt;
&lt;style&gt;
<span class="w">    </span>html,<span class="w"> </span>body<span class="w"> </span><span class="o">{</span>
<span class="w">    </span>text-align:<span class="w"> </span>center<span class="p">;</span>
<span class="w">    </span><span class="o">}</span>
&lt;/style&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;h1&gt;Introduction<span class="w"> </span>to<span class="w"> </span>DevOps<span class="w"> </span>-<span class="w"> </span>Docker&lt;/h1&gt;
&lt;h2&gt;Web<span class="w"> </span>server<span class="w"> </span>deployed<span class="w"> </span>successfully!&lt;/h2&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre></div>
</div>
<p>And a file <code class="docutils literal notranslate"><span class="pre">Dockerfile</span></code></p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span>FROM<span class="w"> </span>nginx:stable-alpine

<span class="c1"># Change our working directory to the root of nginx web host</span>
WORKDIR<span class="w"> </span>/usr/share/nginx/html

<span class="c1"># Copy in the the index.html</span>
COPY<span class="w"> </span>index.html<span class="w"> </span>/usr/share/nginx/html/
</pre></div>
</div>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># clone repository using git clone repo_url</span>
<span class="c1"># change directory to docker_examples/hello_world</span>
<span class="c1"># get location by running explorer.exe .</span>
<span class="c1"># copy the location from explorer</span>
<span class="c1"># change directory to the location</span>

docker<span class="w"> </span>build<span class="w"> </span>-t<span class="w"> </span>webserver<span class="w"> </span>.

<span class="c1"># build the created image with a tag (-t) hello from current location (.)</span>
docker<span class="w"> </span>container<span class="w"> </span>run<span class="w"> </span>-p<span class="w"> </span><span class="m">8080</span>:80<span class="w"> </span>--name<span class="w"> </span>webserver<span class="w"> </span>-d<span class="w"> </span>webserver
</pre></div>
</div>
</section>
<section id="building-a-dockerfile">
<h2>Building a Dockerfile</h2>
<p>Before we construct our Dockerfile, you need to understand what makes up the file. This will be a text file, named Dockerfile, that includes specific keywords that dictate how to build a specific image. The specific keywords you can use in a file are:</p>
<blockquote>
<div><ul class="simple">
<li><p><strong>ADD</strong> copies the files from a source on the host into the containerâ€™s own filesystem at the set destination.</p></li>
<li><p><strong>ENV</strong> sets environment variables.</p></li>
<li><p><strong>EXPOSE</strong> associates a specific port to enable networking between the container and the outside world.</p></li>
<li><p><strong>FROM</strong> defines the base image used to start the build process.</p></li>
<li><p><strong>USER</strong> sets the UID (or username) which is to run the container.</p></li>
<li><p><strong>VOLUME</strong> is used to enable access from the container to a directory on the host machine.</p></li>
<li><p><strong>WORKDIR</strong> sets the path where the command, defined with CMD, is to be executed.</p></li>
<li><p><strong>LABEL</strong> allows you to add a label to your docker image.</p></li>
<li><p><strong>RUN</strong> - RUN instruction allows you to install your application and packages required for it. It executes any commands on top of the current image and creates a new layer by committing the results. Often you will find multiple RUN instructions in a Dockerfile.</p></li>
<li><p><strong>CMD</strong> - can be used for executing a specific command within the container.CMD instruction allows you to set a default command, which will be executed only when you run container without specifying a command. If Docker container runs with a command, the default command will be ignored. If Dockerfile has more than one CMD instruction, all but last CMD instructions are ignored. The CMD can be overridden when starting a container with <code class="docutils literal notranslate"><span class="pre">docker</span> <span class="pre">run</span> <span class="pre">image_name</span> <span class="pre">other_command</span></code> example <code class="docutils literal notranslate"><span class="pre">docker</span> <span class="pre">run</span> <span class="pre">fedora</span> <span class="pre">bash</span></code>.</p></li>
<li><p><strong>ENTRYPOINT</strong> is also closely related to CMD and can modify the way a container is started from an image, sets a default application to be used every time a container is created with the image.</p></li>
</ul>
</div></blockquote>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span>FROM<span class="w"> </span>ubuntu:latest
LABEL<span class="w"> </span>YOUR_NAME<span class="w"> </span>YOUR_EMAIL

RUN<span class="w"> </span>apt-get<span class="w"> </span>-y<span class="w"> </span>update
RUN<span class="w"> </span>apt-get<span class="w"> </span>-y<span class="w"> </span>upgrade
RUN<span class="w"> </span>apt-get<span class="w"> </span>install<span class="w"> </span>-y<span class="w"> </span>tree

CMD<span class="w"> </span>tree<span class="w"> </span>-d<span class="w"> </span>-L<span class="w"> </span><span class="m">2</span><span class="w"> </span>/
</pre></div>
</div>
<p>to build the image we run <code class="docutils literal notranslate"><span class="pre">docker</span> <span class="pre">build</span> <span class="pre">-t</span> <span class="pre">getting_tree</span> <span class="pre">.</span></code> and to run docker <code class="docutils literal notranslate"><span class="pre">docker</span> <span class="pre">run</span> <span class="pre">getting_tree</span></code></p>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>